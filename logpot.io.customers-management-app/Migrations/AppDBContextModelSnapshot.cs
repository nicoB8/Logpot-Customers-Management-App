// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using logpot.io.customers_management.repositories;

#nullable disable

namespace logpot.io.customers_management_app.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("logpot.io.customers_management_app.entities.Restaurant.RestaurantEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("logpot.io.customers_management_app.entities.Service.ServiceEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("RestaurantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("ServiceEntity");

                    b.HasDiscriminator<string>("Name").HasValue("ServiceEntity");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("logpot.io.customers_management_app.entities.Service.DigitalProductService", b =>
                {
                    b.HasBaseType("logpot.io.customers_management_app.entities.Service.ServiceEntity");

                    b.Property<int>("MonthConsumption")
                        .HasColumnType("int");

                    b.Property<int>("MonthlyLimit")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("DigitalProductService");
                });

            modelBuilder.Entity("logpot.io.customers_management_app.entities.Service.ManagedService", b =>
                {
                    b.HasBaseType("logpot.io.customers_management_app.entities.Service.ServiceEntity");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HoursConsumed")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ManagedService");
                });

            modelBuilder.Entity("logpot.io.customers_management_app.entities.Service.ServiceEntity", b =>
                {
                    b.HasOne("logpot.io.customers_management_app.entities.Restaurant.RestaurantEntity", "Restaurant")
                        .WithMany("Services")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("logpot.io.customers_management_app.entities.Restaurant.RestaurantEntity", b =>
                {
                    b.Navigation("Services");
                });
#pragma warning restore 612, 618
        }
    }
}
